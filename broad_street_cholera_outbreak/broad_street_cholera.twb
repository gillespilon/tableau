<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook original-version='10.3' source-build='10.3.1 (10300.17.0615.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='broad_street_cholera' inline='true' name='federated.17lsq820kqwfub1byz7b20bryfu4' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='broad_street_cholera' name='textscan.0dhfnuz0z8qfdl190vlnm0hixu0h'>
            <connection class='textscan' directory='//10.0.2.4/qemu/home/gilles/documents/websites/support.gillespilon.ca/fil/tableau/broad_street_cholera_outbreak' filename='broad_street_cholera.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0dhfnuz0z8qfdl190vlnm0hixu0h' name='broad_street_cholera.csv' table='[broad_street_cholera#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='real' name='deaths x' ordinal='0' />
            <column datatype='real' name='deaths y' ordinal='1' />
            <column datatype='real' name='pump x' ordinal='2' />
            <column datatype='real' name='pump y' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>deaths x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths x]</local-name>
            <parent-name>[broad_street_cholera.csv]</parent-name>
            <remote-alias>deaths x</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths y]</local-name>
            <parent-name>[broad_street_cholera.csv]</parent-name>
            <remote-alias>deaths y</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pump x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pump x]</local-name>
            <parent-name>[broad_street_cholera.csv]</parent-name>
            <remote-alias>pump x</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pump y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pump y]</local-name>
            <parent-name>[broad_street_cholera.csv]</parent-name>
            <remote-alias>pump y</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[broad_street_cholera.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Deaths X' datatype='real' name='[deaths x]' role='measure' type='quantitative' />
      <column caption='Deaths Y' datatype='real' name='[deaths y]' role='measure' type='quantitative' />
      <column caption='Pump X' datatype='real' name='[pump x]' role='measure' type='quantitative' />
      <column caption='Pump Y' datatype='real' name='[pump y]' role='measure' type='quantitative' />
      <column-instance column='[deaths x]' derivation='Sum' name='[sum:deaths x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pump x]' derivation='Sum' name='[sum:pump x:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434509' measure-ordering='alphabetic' measure-percentage='0.565491' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' palette=':default' type='shape'>
            <map to='circle'>
              <bucket>&quot;[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump x:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths x:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='broad_street_cholera' name='federated.17lsq820kqwfub1byz7b20bryfu4' />
          </datasources>
          <datasource-dependencies datasource='federated.17lsq820kqwfub1byz7b20bryfu4'>
            <column caption='Deaths X' datatype='real' name='[deaths x]' role='measure' type='quantitative' />
            <column caption='Deaths Y' datatype='real' name='[deaths y]' role='measure' type='quantitative' />
            <column-instance column='[deaths x]' derivation='Sum' name='[sum:deaths x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths y]' derivation='Sum' name='[sum:deaths y:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths x:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths x:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths y:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths y:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths y:qk]</rows>
        <cols>[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pumps'>
      <table>
        <view>
          <datasources>
            <datasource caption='broad_street_cholera' name='federated.17lsq820kqwfub1byz7b20bryfu4' />
          </datasources>
          <datasource-dependencies datasource='federated.17lsq820kqwfub1byz7b20bryfu4'>
            <column caption='Pump X' datatype='real' name='[pump x]' role='measure' type='quantitative' />
            <column caption='Pump Y' datatype='real' name='[pump y]' role='measure' type='quantitative' />
            <column-instance column='[pump x]' derivation='Sum' name='[sum:pump x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pump y]' derivation='Sum' name='[sum:pump y:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump y:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump y:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump x:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump x:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump y:qk]</rows>
        <cols>[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:pump x:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.17lsq820kqwfub1byz7b20bryfu4].[sum:deaths y:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Pumps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pumps' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
